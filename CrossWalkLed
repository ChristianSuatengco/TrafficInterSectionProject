module CrossWalkLED (input ButtonPressed, CLK, RST, //Needed
		     output reg [7:0] a,b, //Needed
output reg [4:0] counter,
output reg isButtonPressed);

always @(posedge CLK or posedge RST) begin

	if(RST)begin
	counter <= 15;
	isButtonPressed <= 0;
	end
	else begin
	if(!isButtonPressed)begin
	counter <= 0;
	end
	else begin
		if(counter == 0)begin 
		counter <= 15; 
		end
		else begin
		counter <= counter - 1;
		end
	end
	end
end

always @(counter)begin
	case(counter)
	0:begin a = {1'b0, 7'b0000000}; b <= {1'b0, 7'b0000000}; isButtonPressed <= 0; end
	1:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b0000110}; end
	2:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1011011}; end
	3:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1001111}; end
	4:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1100110}; end
	5:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1101101}; end
	6:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1111101}; end
	7:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b0000111}; end
	8:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1111111}; end
	9:begin a = {1'b1, 7'b0111111}; b = {1'b1, 7'b1100111}; end
	10:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b0000000}; end
	11:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b0000110}; end
	12:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b1011011}; end
	13:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b1001111}; end
	14:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b1100110}; end
	15:begin a = {1'b1, 7'b0000110}; b = {1'b1, 7'b1101101}; end
endcase
end
	
always @(posedge ButtonPressed)begin
		isButtonPressed <= 1;
end

endmodule
