module TrafficIntersectionTop_TB;
reg NSTraffic, EWTraffic, CLK, RST;
wire NSRed, NSYellow, NSGreen;
wire EWRed, EWYellow, EWGreen;
wire intersectionCurrentState;
wire [3:0] NSTrafficLightCounter;
wire [3:0] EWTrafficLightCounter;
wire [1:0] NSLightState;
wire [1:0] EWLightState;
wire NSYellowReset;
wire EWYellowReset;
wire NSGreenReset;
wire EWGreenReset;
wire NSYellowTrigger;
wire EWYellowTrigger;
wire NSGreenTrigger;
wire EWGreenTrigger;
wire [1:0] NSSignal;
wire [1:0] EWSignal;

TrafficIntersectionTop WORK (
.NSTraffic(NSTraffic),
.EWTraffic(EWTraffic),
.CLK(CLK),
.RST(RST),
.NSRed(NSRed),
.NSYellow(NSYellow),
.NSGreen(NSGreen),
.EWRed(EWRed),
.EWYellow(EWYellow),
.EWGreen(EWGreen),
.intersectionCurrentState(intersectionCurrentState),
.NSTrafficLightCounter(NSTrafficLightCounter),
.EWTrafficLightCounter(EWTrafficLightCounter),
.NSLightState(NSLightState),
.EWLightState(EWLightState),
.NSYellowReset(NSYellowReset),
.EWYellowReset(EWYellowReset),
.NSGreenReset(NSGreenReset),
.EWGreenReset(EWGreenReset),
.NSYellowTrigger(NSYellowTrigger),
.EWYellowTrigger(EWYellowTrigger),
.NSGreenTrigger(NSGreenTrigger),
.EWGreenTrigger(EWGreenTrigger),
.NSSignal(NSSignal),
.EWSignal(EWSignal));

parameter ClockPeriod = 10;
initial CLK=1'b0;
always #(ClockPeriod/2) CLK = ~CLK;
initial begin
RST=1; NSTraffic=0; EWTraffic=0;
#10; RST=0; #10;
NSTraffic=1; EWTraffic=1;#20;
NSTraffic=0;#120;
NSTraffic=1;#10;
EWTraffic=0;#20;
end
    
endmodule
